/*
 * This source file was generated by the Gradle 'init' task
 */


package org.example
import java.io.File

class Inventory {

    private val products: MutableMap<Int, Products> = mutableMapOf()
    private val fileName = "products.txt"

    init {
        loadFromFile()
    }

    fun addProduct() {
        println("Enter product ID: ")
        val id = readLine()!!.toInt()

        println("Enter product name: ")
        val name = readLine()!!

        println("Enter product description: ")
        val desc = readLine()!!

        println("Enter product price: ")
        val price = readLine()!!.toDouble()

        println("Enter product stock: ")
        val stock = readLine()!!.toInt()

        println("Enter product category (ELECTRONICS, CARE, FOOD, CANDIES, CLOTHING, OTHERS): ")
        val categoryInput = readLine()!!.uppercase()
        val category = Category.valueOf(categoryInput)

        val product = Products(id, name, desc, price, stock, category)
        products[id] = product
        println("Product added: $product")

        saveToFile()
    }

    fun deleteProduct() {
        println("Enter product ID to delete: ")
        val id = readLine()!!.toInt()

        if (products.remove(id) != null) {
            println("Product with ID $id removed.")
            saveToFile()
        } else {
            println("Product with ID $id not found.")
        }
    }

    fun searchProduct() {
        println("Enter product ID to search: ")
        val id = readLine()!!.toInt()

        val product = products[id]
        if (product != null) {
            println("Found: $product")
        } else {
            println("Product with ID $id not found.")
        }
    }

    fun showInventory() {
        if (products.isEmpty()) {
            println("Inventory is empty.")
        } else {
            println("Current inventory:")
            products.values.forEach { println(it) }
        }
    }

    private fun saveToFile() {
        val file = File(fileName)
        file.printWriter().use { out ->
            products.values.forEach { p ->
                out.println("${p.id},${p.name},${p.desc},${p.price},${p.stock},${p.category}")
            }
        }
    }

    private fun loadFromFile() {
        val file = File(fileName)
        if (!file.exists()) return

        file.forEachLine { line ->
            val parts = line.split(",")
            if (parts.size == 6) {
                val product = Products(
                    parts[0].toInt(),
                    parts[1],
                    parts[2],
                    parts[3].toDouble(),
                    parts[4].toInt(),
                    Category.valueOf(parts[5])
                )
                products[product.id] = product
            }
        }
    }

    fun getAllProducts(): List<Products> {
        return products.values.toList()
    }

}
